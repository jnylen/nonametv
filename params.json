{
  "name": "Nonametv",
  "tagline": "Convert tv-listings to xmltv format",
  "body": "The system consists of three main parts: the Importers, the Database\r\nand the Exporters.\r\n\r\n## IMPORTERS\r\n\r\nImporters are used to import data from different sources into the database.\r\nThere is one importers for each data provider. All importers inherit\r\nfrom the NonameTV::Importer class and thus provide a consistent interface.\r\n\r\nData is imported in batches. A batch is the smallest unit of data that\r\ncan be identified by the importer. Usually, a batch corresponds to\r\na file provided by the data provider.\r\n\r\nAll Importers that import data via HTTP inherit from one of\r\nNonameTV::Importer::BaseOne, BaseDaily or BaseWeekly. These baseclasses\r\nprovide helper-functions that handle data provided in a single file per\r\nchannel, one file per day and channel or one file per week and channel.\r\n\r\nThere is an override-mechanism implemented in the importers that can be\r\nused to override faulty data provided by the data-providers. Sometimes\r\nthe data is plain wrong and you need to edit it before feeding it to\r\nthe importers. See tools/nonametv-import-download for instructions.\r\n\r\nThe Importers are run via the command-line tool tools/nonametv-import:\r\n\r\nperl -I lib tools/nonametv-import Infomedia --verbose\r\n\r\n## DATABASE\r\n\r\nAll data is stored in a MySQL-database in a consistent format. All\r\nstrings are encoded in utf-8 in the database and all times are stored\r\nin UTC-timezone.  The channels and trans_cat tables are updated\r\nmanually (using the mysql frontend of your choice.) The programs and\r\nbatches tables are updated by the Importers and cannot be updated\r\nmanually.\r\n\r\n## EXPORTERS\r\n\r\nThe Exporters take the data in the database and export it in another format.\r\nThe only Exporter that exist today is the Xmltv exporter that exports data\r\nin a format that tv_grab_se_swedb can utilize.\r\n\r\n## AVOIDING UNNECESSARY UPDATES\r\n\r\ntv_grab_se_swedb utilizes http-caching to avoid downloading data that\r\nhasn't changed since the last time tv_grab_se_swedb was run. This\r\nsaves a lot of bandwidth for the server if utilized correctly.\r\n\r\nAdditionally, some of the Importers take a lot of time to run and we want\r\nto avoid Importing data if nothing has changed. There are a number of\r\nmechanisms in place to avoid doing unnecessary work:\r\n\r\nAll Importers use HTTP-caching (if they fetch data via HTTP) and only\r\nprocesses data if it has actually changed since it was last downloaded.\r\nTo force an update (for example if the Importer-code has been improved),\r\nuse the parameter --force-update:\r\n\r\nperl -I lib tools/nonametv-import Infomedia --force-update\r\n\r\nThe Exporter only exports data for batches that have actually changed.\r\nFurthermore, after exporting a file, the Exporter checks to see if the\r\nexported file is different from the previous file for that period. If\r\nthe new file is identical to the old file, the old file is left untouched.\r\n\r\nAfter the export-step, rsync is used to copy the data from the\r\nxmltv_staging directory to the xmltv-directory. Once more, only files\r\nthat have actually changed (detected by checking file contents) are\r\ncopied. This can be useful during development, since you can do an\r\nexport, see that something went wrong (for example by using \r\ntools/nonametv-xmltv-compare-run and look at the changes). Then revert\r\nyour changes and run export again. Since the newly exported files are\r\nthen identical to the files in the xmltv/directory, the next run of\r\nrsync will not copy any files even though the date on the files has been\r\nupdated.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}